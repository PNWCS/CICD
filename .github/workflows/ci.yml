name: CI - Coverlet + ReportGenerator

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Adjust if you're using a different .NET version

      - name: Run Code Formatting Check
        run: dotnet format --verify-no-changes

      - name: Run Static Code Analysis
        run: dotnet build --configuration Release /warnaserror

      - name: Run Tests with Coverage
        run: |
          dotnet test --configuration Release ^
            --collect:"XPlat Code Coverage" ^
            /p:CollectCoverage=true ^
            /p:CoverletOutputFormat=cobertura ^
            /p:CoverletOutput="TestResults/coverage"

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Coverage Report
        shell: pwsh
        run: |
          reportgenerator `
            -reports:TestResults/coverage.cobertura.xml `
            -targetdir:TestResults/CoverageReport `
            -reporttypes:"Html;TextSummary"

      - name: Show Coverage Summary
        shell: pwsh
        run: |
          if (Test-Path "TestResults/CoverageReport/Summary.txt") {
            Write-Host "===== COVERAGE SUMMARY ====="
            Get-Content "TestResults/CoverageReport/Summary.txt"
          } else {
            Write-Host "‚ùå Coverage summary not found!"
            exit 1
          }

      - name: Upload Coverage HTML
        uses: actions/upload-artifact@v3
        with:
          name: CoverageReport
          path: TestResults/CoverageReport
